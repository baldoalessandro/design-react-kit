name: Check tree-shakeability
on: [ pull_request ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build artifacts
        run: yarn build

      - name: Install agadoo
        # TODO decide if agadoo will be installed as a project dependency or just in CI
        run: npm install -g agadoo
      - name: Run agadoo
        id: agadoo
        run: |
          # Run Agadoo and store the output for further usage
          # We store the process stdout and stderr to tmp files
          STDOUT_F=$(mktemp)
          STDERR_F=$(mktemp)
          # Run agadoo and capture errors without breaking the workflow
          (agadoo 2> $STDERR_F > $STDOUT_F || RET=$? && RET=$? ) ||:

          # In order to be used in GH actions `echo "::set-output` the
          # multi-line output must be escaped.
          STDOUT="$(cat $STDOUT_F)"
          STDOUT="${STDOUT//'%'/%25}"
          STDOUT="${STDOUT//$'\n'/%0A}"
          STDOUT="${STDOUT//$'\r'/%0D}"
          STDERR="$(cat $STDERR_F)"
          STDERR="${STDERR//'%'/%25}"
          STDERR="${STDERR//$'\n'/%0A}"
          STDERR="${STDERR//$'\r'/%0D}"
          echo "::set-output name=stdout::$STDOUT"
          echo "::set-output name=stderr::$STDERR"
          if [[ $RET ]]; then
            echo "::set-output name=status::tree-shakeable"
          else
            echo "::set-output name=status::not tree-shakeable"
          fi
          echo "$STDOUT"
          echo ""
          echo "$STDERR"
          # Clean-up
          rm $STDOUT_F
          rm $STDERR_F
          exit 0
      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            **Check tree-shakeability** :deciduous_tree: for ${{ github.sha }}: ${{ steps.agadoo.outputs.status }}
            <details>
              <summary>Agadoo stdout</summary>

              ```javascript
              ${{ steps.agadoo.outputs.stdout }}
              ```

            </details>
            <details>
              <summary>Agadoo stderr</summary>

              ```javascript
              ${{ steps.agadoo.outputs.stderr }}
              ```

            </details>
          check_for_duplicate_msg: false
          delete_prev_regex_msg: "**Check tree-shakeability** :deciduous_tree: "
